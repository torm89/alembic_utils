name: Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            python-version: ['3.10']
            postgres-version: ['15']
            sqlalchemy-version: ['2.0']

#            python-version: ['3.8', '3.9', '3.10', '3.11']
#            postgres-version: ['11', '12', '13', '14', '15']
#            sqlalchemy-version: ['1.4', '2.0']
    services:

      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_DB: alem_db
          POSTGRES_HOST: localhost
          POSTGRES_USER: alem_user
          POSTGRES_PASSWORD: password
        ports:
        - 5610:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        pip install --upgrade pip
        pip install wheel
        pip install -e ".[dev]"
        pip install "sqlalchemy==${{ matrix.sqlalchemy-version }}"

    - name: Test with Coverage
      run: |
        pytest --cov=alembic_utils src/test --cov-report=xml

#    - name: Upload coverage to Codecov
#      uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        file: ./coverage.xml
#        flags: unittests
#        name: codecov-umbrella
#        fail_ci_if_error: true
